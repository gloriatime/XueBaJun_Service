<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="com.xuebajun.mapper.CourseMapper">
		<insert id="add" parameterType="Course">
			insert into t_course(name) values(#{name});
		</insert>
		
		
		<delete id="delete" parameterType="Course">
			delete from t_course where Id=#{Id};
		</delete>
		
		<!-- 打分 -->
		<update id="score" parameterType="Course">
			update t_course set score=#{score},number=number+1 where Id=#{Id};
		</update>
		<!-- 增加评论数 -->
		<update id="plusCommentNumber" parameterType="Course">
			update t_course set comment+1 where Id=#{Id};
		</update>
		
		<!-- 课程对应教材 -->
		<resultMap type="Course" id="Bean">
	    	<id column="course_Id" property="Id"/>
	    	<result column="course.name" property="name"/>
	    	<result column="course.term" property="term"/>
	    	<result column="course.intro" property="intro"/>
	    	<result column="course.score" property="score"/>
	    	<result column="course.number" property="number"/>
	    	<result column="course.comment" property="comment"/>
	    	
	    	<association property="book" javaType="Book">
	    			<id column="book_Id" property="Id"/>
	    			<result column="book_name" property="name"/>
	    	</association>
	    		
	    </resultMap>
		
		<select id="getById" parameterType="Course" resultMap="Bean">
			select course.*,book.*, course.Id "course_Id",course.name "course.name",course.term "course.term",course.intro "course.intro", course.score "course.score" ,course.number "course.number",course.comment "course.comment",book.Id "book_Id", book.name "book_name"
			from t_course course
			left join t_book book on course.book = book.Id
			where course.Id = #{Id};
		</select>
		
		<!-- 课程对应教师关系列表 -->
		<resultMap type="Course" id="ProfessorBean">
	    	<id column="Course_Id" property="Id"/>
	    	
	    	<collection property="professorCourseList" ofType="ProfessorCourse">
	    	
	    		<association property="professor" javaType="Professor">
	    			<id column="professor_Id" property="Id"/>
	    			<result column="professor_name" property="name"/>
	    		</association>
	    		
	    	</collection>
	    </resultMap>
	    <select id="getProfessorCourseList" resultMap="ProfessorBean" parameterType="Course">
	    	select professor.*,course.*,course.Id "course_Id",professor.Id "professor_Id",professor.name "professor_name"
	    	from t_course course
	    	left join t_professor_course on course = course.Id
	    	left join t_professor professor on professor = professor.Id
	    	where course.Id = #{Id};
	    </select>
	    
		<!-- 查看评论功能：得到评论列表 -->
		 <resultMap type="Course" id="CourseBean">
	    	<id column="course_id" property="Id"/>
	    	
	    	<collection property="commentList" ofType="Comment">
	    	
	    		<id column="comment_Id" property="id"/>
	    		<result column="comment_content" property="content"/>
	    		<result column="comment_critic" property="critic"/>
	    		<result column="comment_date" property="date"/>
	    		<result column="comment_type" property="type"/>
	    		<result column="comment_belong" property="belong"/>
	    	</collection>
	    </resultMap>
	    
	     <select id="getMyCommentList" resultMap="CourseBean" parameterType="Course">
	    	select comment.*,course.*,course.Id "course_id",comment.Id "comment_Id",comment.content "comment_content",comment.critic "comment_critic",comment.date "comment_date",comment.type "comment_type",comment.belong "comment_belong"
	    	from t_course course
	    	left join t_comment comment on comment.type='‘course’' and course.Id=comment.belong
	    	where course.Id=#{Id};
	    </select>
		
		<!-- 搜索课程功能：得到课程列表 -->
	    <select id="searchCourseList" parameterType="Course" resultType="Course">
	    	select *
	    	from t_course 
	    	where name like '%${name}%' or intro like '%${name}%'
	    </select>
	    
	   <!-- 推荐系统：得到近一周热度第一 -->
	    <select id="getTopOne" parameterType="TopDate" resultType="Course">
	    	select course.Id,course.name,count(*) as heat
			from t_course as course, t_comment as comment
			where date between #{begin} and #{end} and belong = course.Id and type='course'
			order by heat DESC limit 1;
	    </select>
	    <select id="getLastOne" resultType="Course">
			select Id,name from t_course order by Id DESC limit 1
	    </select>
	    
	    <!-- 推荐系统：得到近一周热度20 -->
	    <select id="getTopTwenty" parameterType="TopDate" resultType="Course">
	    	select course.Id,course.name,count(*) as heat
			from t_course as course, t_comment as comment
			where date between #{begin} and #{end} and belong = course.Id and type='course'
			order by heat DESC limit 20;
	    </select>
	    
	     <!-- 展示系统：得到标签列表 -->
	     <resultMap type="Course" id="TagBean">
	    	<id column="book_id" property="Id"/>
	    	
	    	<collection property="tagList" ofType="Tag">
	    	
	    		<id column="tag_Id" property="Id"/>
	    		<result column="tag_name" property="name"/>
	    		<result column="tag_type" property="type"/>
	    		<result column="tag_times" property="times"/>
	    	</collection>
	    </resultMap>
	    
	     <select id="getTagList" resultMap="TagBean" parameterType="Course">
	    	select tag.*,course.*,course.id "course_id",tag.Id "tag_Id",tag.name "tag_name",tag.type "tag_type",tag.times "tag_times"
	    	from t_course course
	    	left join t_tag_tag  tagtag on tagtag.belong = course.id and tagtag.type = 'course'
	    	left join t_tag tag on tag.Id = tagtag.tag
	    	where course.id=#{Id};
	    </select>
	    
	</mapper>